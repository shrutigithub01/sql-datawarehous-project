*********************************************************************************
Customer information table
*********************************************************************************

IF OBJECT_ID ('silver.crm_cust_info','U') IS NOT NULL
   DROP TABLE silver.crm_cust_info

CREATE TABLE silver.crm_cust_info
(
cst_id INT,
cst_key NVARCHAR(50),
cst_firstname NVARCHAR(50),
cst_lastname NVARCHAR(50),
cst_marital_status NVARCHAR(50),
cst_gndr NVARCHAR(50),
cst_create_date DATE,
dwh_create_date DATETIME2 DEFAULT GETDATE()
)
GO


IF OBJECT_ID ('silver.crm_prd_info','U') IS NOT NULL
   DROP TABLE silver.crm_prd_info

CREATE TABLE silver.crm_prd_info
(
prd_id INT,
prd_key NVARCHAR(50),
prd_name NVARCHAR(50),
prd_cost INT,
prd_line NVARCHAR(50),
prd_start_dt DATETIME,
prd_end_dt DATETIME,
dwh_create_date DATETIME2 DEFAULT GETDATE()
)
GO

IF OBJECT_ID ('silver.crm_sales_details','U') IS NOT NULL
   DROP TABLE silver.crm_sales_details


CREATE TABLE silver.crm_sales_details
(
sls_ord_num NVARCHAR(50),
sls_prd_key NVARCHAR(50),
sls_cust_id INT,
sls_order_dt INT,
sls_ship_dt INT,
sls_due_dt INT,
sls_sales INT,
sls_quantity INT,
sls_price INT,
dwh_create_date DATETIME2 DEFAULT GETDATE()
)
GO


IF OBJECT_ID ('silver.erp_loc_a101','U') IS NOT NULL
   DROP TABLE silver.erp_loc_a101

CREATE TABLE silver.erp_loc_a101
( 
cid NVARCHAR(50),
cntry NVARCHAR(50),
dwh_create_date DATETIME2 DEFAULT GETDATE()
)

GO 

-- Create ERP customer table

IF OBJECT_ID ('silver.erp_cust_az12','U') IS NOT NULL
   DROP TABLE silver.erp_cust_az12


CREATE TABLE silver.erp_cust_az12
(
cid NVARCHAR(50),
bdate DATE,
gen NVARCHAR(50),
dwh_create_date DATETIME2 DEFAULT GETDATE()
)

GO

-- Create ERP px cat table

IF OBJECT_ID ('silver.erp_px_cat_giv2','U') IS NOT NULL
   DROP TABLE silver.erp_px_cat_giv2


CREATE TABLE silver.erp_px_cat_giv2
(
id          NVARCHAR (50),
cat			NVARCHAR (50),
subcat		NVARCHAR (50),
maintenance NVARCHAR (50),
dwh_create_date DATETIME2 DEFAULT GETDATE()
)


***********************************************************************************************
Product information table 
***********************************************************************************************

-- Checking for duplicates and NULLS in product id 

SELECT 
      prd_id,
      count(*)
FROM bronze.crm_prd_info
GROUP BY prd_id
HAVING COUNT(*) > 1 OR prd_id IS NOT NULL

/* Checking for Unwanted spaces
   Expectation: No record , Actual Result: No record*/

SELECT prd_name
FROM 
bronze.crm_prd_info
WHERE prd_name != TRIM(prd_name)

/* Checking for NULL values and negative values in prd_cost
   Expectation: No result  Actual Result: Having NULL */

SELECT prd_cost
FROM bronze.crm_prd_info
WHERE prd_cost IS NULL OR prd_cost  < 0

-- Checking for invalid date order : Actual Result: No results

SELECT * FROM 
bronze.crm_prd_info
WHERE prd_end_dt < prd_start_dt



/* Selecting all the columns from the table and divinding the product key column intwo two parts 
   first part is the product cateogry and second one is the id */

IF OBJECT_ID ('silver.crm_prd_info','U') IS NOT NULL 
   DROP TABLE silver.crm_prd_info

CREATE TABLE silver.crm_prd_info
(
prd_id INT,
cat_id NVARCHAR(50),
prd_key NVARCHAR(50),
prd_name NVARCHAR(50),
prd_cost INT,
prd_line NVARCHAR(50),
prd_start_dt DATE,
prd_end_dt DATE,
dwh_create_date DATETIME2 DEFAULT GETDATE()
)



INSERT INTO silver.crm_prd_info
(
prd_id,
cat_id,
prd_key,
prd_name,
prd_cost ,
prd_line,
prd_start_dt ,
prd_end_dt )

SELECT 
prd_id,
/* Creating the separate column of category as we have diff cateogry 
and replacing '-' by '_' */
REPLACE (SUBSTRING(prd_key,1,5),'-','_') AS cat_id,
SUBSTRING(prd_key,7,len(prd_key)) AS prd_key,
prd_name,
-- Replacing NULL values with 0
ISNULL(prd_cost,0) AS prd_cost,
CASE  UPPER(TRIM(prd_line)) 
     WHEN  'M' THEN 'Mountain'
     WHEN  'R' THEN 'Road'
     WHEN  'S' THEN 'Other Sales'
     WHEN  'T' THEN 'Touring'
     ELSE 'n/a'
END AS prd_line,
CAST(prd_start_dt AS DATE) AS prd_start_dt  ,
/* Replacing  end date with the next start date - 1  */
CAST(LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt) - 1 AS DATE) AS prd_end_dt
FROM 
bronze.crm_prd_info

*************************************************************************************
Sale information 
*************************************************************************************

IF OBJECT_ID ('silver.crm_sales_details','U') IS NOT NULL
   DROP TABLE silver.crm_sales_details

CREATE TABLE silver.crm_sales_details
(
sls_ord_num NVARCHAR(50),
sls_prd_key NVARCHAR(50),
sls_cust_id INT,
sls_order_dt DATE,
sls_ship_dt DATE,
sls_due_dt DATE,
sls_sales INT,
sls_quantity INT,
sls_price INT,
dwh_create_date DATETIME2 DEFAULT GETDATE()
)


INSERT INTO silver.crm_sales_details
(sls_ord_num ,
sls_prd_key ,
sls_cust_id ,
sls_order_dt ,
sls_ship_dt ,
sls_due_dt,
sls_sales ,
sls_quantity ,
sls_price )

SELECT 
sls_ord_num,
sls_prd_key,
sls_cust_id,
-- Replacing 0 with NULL
CASE WHEN sls_order_dt= 0 OR LEN(sls_order_dt) ! = 8  THEN NULL 
     ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
END AS sls_order_dt,

CASE WHEN sls_ship_dt= 0 OR LEN(sls_ship_dt) ! = 8  THEN NULL 
     ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
END AS sls_ship_dt,

CASE WHEN sls_due_dt= 0 OR LEN(sls_due_dt) ! = 8  THEN NULL 
     ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
END AS sls_due_dt,

CASE  WHEN sls_sales IS NULL OR sls_price < = 0 OR sls_sales ! = ABS(sls_price) * sls_quantity 
      THEN  ABS(sls_price) * sls_quantity 
      ELSE sls_sales
END AS sls_sales,
sls_quantity,
-- Checking sales price FOR null and negative value , then replcaing it with correct value
CASE  WHEN sls_price IS NULL  
      THEN  sls_price / NULLIF(sls_quantity,0)
      WHEN sls_price < = 0 
      THEN ABS(sls_price)
      ELSE sls_price
END AS sls_price

FROM bronze.crm_sales_details


-- Checking for negative values or 0 in order date 

SELECT 
sls_order_dt 
FROM bronze.crm_sales_details
WHERE sls_order_dt<=0

-- Checking for length of data in order date , actual result: 2 values

SELECT 
NULLIF(sls_order_dt,0) AS sls_order_dt
FROM bronze.crm_sales_details
WHERE LEN(sls_order_dt) < 8

-- Checking order date is greater than ship date and due date , actual result : No result
SELECT 
*
FROM bronze.crm_sales_details
WHERE sls_order_dt > sls_order_dt or sls_order_dt > sls_due_dt

/* Checking the quality of price 
Rule 1: Sales is negative or NULL then calculate on the basis of price and quantity
Rule 2: Price is 0,NULL or Negative , derive it using  sales and quantity
Rule 3: Price is -ve , convert it to +ve
*/

SELECT 
sls_sales AS old_sls_sales,
sls_price AS old_sls_price,
sls_quantity AS old_sls_quantity,

CASE  WHEN sls_sales IS NULL OR sls_price < = 0 OR sls_sales ! = ABS(sls_price) * sls_quantity 
      THEN  ABS(sls_price) * sls_quantity 
      ELSE sls_sales
END AS sls_sales,

CASE  WHEN sls_price IS NULL  
      THEN  sls_price / NULLIF(sls_quantity,0)
      WHEN sls_price < = 0 
      THEN ABS(sls_price)
      ELSE sls_price
END AS sls_price
FROM bronze.crm_sales_details


